[project]
name = "hambajuba2ba"
version = "0.1.0"
description = "Real-time diffusion pipeline with StreamDiffusion integration"
readme = "README.md"
requires-python = ">=3.11"

dependencies = [
  "diffusers==0.35.2",
  "transformers==4.57.1",
  "accelerate",
  "peft==0.17.0",
  "numpy",
  "pillow",
  "opencv-python",
  "huggingface_hub",
  "safetensors",
  "fire",
  "omegaconf",
  "fastapi[standard]",
  "uvicorn[standard]",
  "websockets",
  "pydantic-settings",
  "librosa>=0.11.0",
]

[project.optional-dependencies]
cpu = [
  "torch>=2.7,<2.8",
  "torchvision>=0.22,<0.23",
  "torchaudio>=2.7,<2.8",
]

cu128 = [
  "torch>=2.7,<2.8",
  "torchvision>=0.22,<0.23",
  "torchaudio>=2.7,<2.8",
  "xformers ; sys_platform == 'linux' and platform_machine == 'x86_64'",
]

trt = [
  "tensorrt-cu12 ; sys_platform == 'linux' and platform_machine == 'x86_64'",
  "tensorrt-cu12-libs ; sys_platform == 'linux' and platform_machine == 'x86_64'",
  "tensorrt-cu12-bindings ; sys_platform == 'linux' and platform_machine == 'x86_64'",
  "polygraphy ; sys_platform == 'linux' and platform_machine == 'x86_64'",
  "cuda-python==12.8 ; sys_platform == 'linux' and platform_machine == 'x86_64'",
  "onnx ; sys_platform == 'linux' and platform_machine == 'x86_64'",
  "onnxruntime ; sys_platform == 'linux' and platform_machine == 'x86_64'",
  "onnx-graphsurgeon ; sys_platform == 'linux' and platform_machine == 'x86_64'",
]

[tool.uv]
conflicts = [
  [ { extra = "cpu" }, { extra = "cu128" } ],
  [ { extra = "cpu" }, { extra = "trt" } ],
]
dependency-metadata = [
  { name = "tensorrt-cu12",          version = "10.13.3.9", requires-dist = [] },
  { name = "tensorrt-cu12-libs",     version = "10.13.3.9", requires-dist = [] },
  { name = "tensorrt-cu12-bindings", version = "10.13.3.9", requires-dist = [] },
  # (Optional) If uv ever tries to peek at these during locking:
  { name = "onnx-graphsurgeon", requires-dist = [] },
  { name = "polygraphy",        requires-dist = [] }
]

[tool.uv.sources]
torch = [
  { index = "pytorch-cpu",   extra = "cpu"   },
  { index = "pytorch-cu128", extra = "cu128" },
]
torchvision = [
  { index = "pytorch-cpu",   extra = "cpu"   },
  { index = "pytorch-cu128", extra = "cu128" },
]
torchaudio = [
  { index = "pytorch-cpu",   extra = "cpu"   },
  { index = "pytorch-cu128", extra = "cu128" },
]
xformers = [
  { index = "pytorch-cu128", extra = "cu128" },
]

"tensorrt-cu12"          = [{ index = "nvidia" }]
"tensorrt-cu12-libs"     = [{ index = "nvidia" }]
"tensorrt-cu12-bindings" = [{ index = "nvidia" }]
"polygraphy"             = [{ index = "nvidia" }]
"onnx-graphsurgeon"      = [{ index = "nvidia" }]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/cu128"
explicit = true

[[tool.uv.index]]
name = "nvidia"
url = "https://pypi.nvidia.com"
explicit = true

[dependency-groups]
dev = [
  "pytest",
  "black",
  "ruff",
  "mypy",
  "ipykernel",
  "jupyter",
  "notebook",
  "colored",
  "ty"
]
